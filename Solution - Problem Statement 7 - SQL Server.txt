
/*
Problem Statement 7.1: 

Insurance companies want to know if a disease is claimed higher or lower than average.  Write a stored procedure that 
returns “claimed higher than average” or “claimed lower than average” when the diseaseID is passed to it. 
Hint: Find average number of insurance claims for all the diseases.  If the number of claims for the passed disease is 
higher than the average return “claimed higher than average” otherwise “claimed lower than average”.

*/

create procedure claim_higher_lower(@diseaseID INT)
as

select distinct diseaseID,avg_claim, count_claims_per_disease, 
case when count_claims_per_disease > avg_claim then 'claimed_higher_than_average'
else 'claimed_lower_than_average'
end as claimstatus
from
	(
	select *, counts_claims/(select count(distinct diseaseID) from [dbo].[Treatment] as disease_count) as avg_claim, 
	count(claimID) over(partition by diseaseID) as count_claims_per_disease
	from
		(
		select diseaseID, claimID, count( claimID) over() as counts_claims
		from
		      (
				select  diseaseID, claimID
				from [dbo].[Treatment]
				where claimID is not null

				) s
		) y
   ) v

where diseaseID = @diseaseID

--------------------------------------------------------------------
drop procedure if exists claim_higher_lower

--------------------------------------------------------------------
--- let's check

exec claim_higher_lower 2


--------------------------------------------
--another way

CREATE PROCEDURE CheckClaimStatus(@diseaseID INT)
AS
BEGIN
  DECLARE @averageClaims float;
  DECLARE @diseaseClaims int;
  -- average number of claims for all diseases
  SELECT @averageClaims = AVG(num_claims)
  FROM (
    SELECT COUNT(*) AS num_claims
    FROM Treatment
    GROUP BY diseaseID
  ) subquery;
  -- total_claims for the required diseaseID
  SELECT @diseaseClaims = COUNT(*)
  FROM [dbo].[Treatment]
  WHERE diseaseID = @diseaseID
  GROUP BY diseaseID;
  -- Comparing 
  IF (@diseaseClaims > @averageClaims)
    PRINT 'Claimed higher than average';
  ELSE
    PRINT 'Claimed lower than average';
END
---checking the procedure
exec CheckClaimStatus 3

/*
Problem Statement 7.2:  

Joseph from Healthcare department has requested for an application which helps him get genderwise report for any disease. 
Write a stored procedure when passed a disease_id returns 4 columns,

disease_name, number_of_male_treated, number_of_female_treated, more_treated_gender
Where, more_treated_gender is either ‘male’ or ‘female’ based on which gender underwent more often for the disease, 

if the number is same for both the genders, the value should be ‘same’.

*/

create procedure genderwisereport(@diseaseid INT)
as
BEGIN


		select diseaseID, number_of_male_treated , number_of_female_treated,
		case 
		when number_of_male_treated > number_of_female_treated then 'male'
		when number_of_female_treated > number_of_male_treated then 'female'
		else 'same'
		end as 'more_treated_gender'
		from
		(
		select diseaseID, 
		sum (case when gender = 'male' then 1 else 0 end) as number_of_male_treated,
		sum (case when gender = 'female' then 1 else 0 end) as number_of_female_treated
		from
		(
		select diseaseID, treatmentID, gender
		from
		[dbo].[Treatment] t
		join
		[dbo].[Person] p
		on t.patientID = p.personID
		join
		[dbo].[Address] a
		on p.addressID = a.addressID
		) s
		group by diseaseID
		) v
		where diseaseid = @diseaseid 
	END;


--- Let's check
exec genderwisereport 3


/*

Problem Statement 7.3:  

The insurance companies want a report on the claims of different insurance plans. 
Write a query that finds the top 3 most and top 3 least claimed insurance plans.
The query is expected to return the insurance plan name, the insurance company name which has that plan, 
and whether the plan is the most claimed or least claimed. 

*/ 


WITH cte AS (
    SELECT companyName, planName, COUNT(c.claimID) AS counts
    FROM [dbo].[InsurancePlan] i
    INNER JOIN [dbo].[InsuranceCompany] ic ON i.companyID = ic.companyID
    INNER JOIN [dbo].[Claim] c ON c.uin = i.uin
    GROUP BY planName,  companyName 
),
cte2 AS (
    SELECT companyName, planName, counts,
           dense_rank() OVER (ORDER BY counts DESC) AS ranks_desc,
           dense_rank() OVER (ORDER BY counts ASC) AS ranks_asc
    FROM cte
)

SELECT companyName, planName,counts,
case
when ranks_desc in (1,2,3) then 'most_claimed'
when ranks_asc in (1,2,3) then 'least_claimed'
end as 
status
FROM cte2
WHERE ranks_desc <= 3 OR ranks_asc <= 3;

-------------------------------------------------------------------------------------------------------------
with cte as (

select ip.planName,ic.companyName,count(c.claimID) as total_claims,
dense_rank() over (order by count(c.claimID) desc) as rank_max,
dense_rank() over (order by count(c.claimID) asc) as rank_min

from dbo.InsuranceCompany ic
join InsurancePlan ip on ic.companyID=ip.companyID
join Claim c on c.uin=ip.uin
group by ip.planName,ic.companyName )


select planname,companyname,total_claims,
case 
when rank_min<=3 then 'Least_claimed'
when rank_max<=3 then 'Most_claimed'
end as category
from cte 
where rank_max<=3 or rank_min<=3
order by total_claims desc

/*
Problem Statement 7.4:

The healthcare department wants to know which category of patients is being affected the most by each disease.
Assist the department in creating a report regarding this.
Provided the healthcare department has categorized the patients into the following category.
YoungMale: Born on or after 1st Jan  2005  and gender male.
YoungFemale: Born on or after 1st Jan  2005  and gender female.
AdultMale: Born before 1st Jan 2005 but on or after 1st Jan 1985 and gender male.
AdultFemale: Born before 1st Jan 2005 but on or after 1st Jan 1985 and gender female.
MidAgeMale: Born before 1st Jan 1985 but on or after 1st Jan 1970 and gender male.
MidAgeFemale: Born before 1st Jan 1985 but on or after 1st Jan 1970 and gender female.
ElderMale: Born before 1st Jan 1970, and gender male.
ElderFemale: Born before 1st Jan 1970, and gender female.
*/


with cte as

(select pr.personName, diseaseID,
case
when dob>'2005-01-01' and gender='male' then 'YoungMale'
when dob>'2005-01-01' and gender='female' then 'YoungFemale'
when (dob between '1985-01-01' and '2005-01-01') and gender='male' then 'AdultMale'
when (dob between '1985-01-01' and '2005-01-01') and gender='female' then 'AdultFemale'
when (dob between '1970-01-01' and '1985-01-01') and gender='male' then 'MidAgeMale'
when (dob between '1970-01-01' and '1985-01-01') and gender='female' then 'MidAgeFemale'
when dob<'1970-01-01' and gender='male' then 'ElderMale'
when dob<'1970-01-01' and gender='female' then 'ElderFemale'
end as category
from [dbo].[Patient] p 
join [dbo].[Person] as pr
on p.patientID = pr.personID
join [dbo].[Treatment] t
on t.patientID = p.patientID)

select diseaseID, category, count_person from
(
	select *, dense_rank() over(partition by diseaseID order by count_person desc) as ranks
	from
		(

			select diseaseID,category,count(personName) as count_person from cte
			group by diseaseID, category

        ) p
  ) q
where ranks = 1







/*
Problem Statement 7.5: 

Anna wants a report on the pricing of the medicine. She wants a list of the most expensive and most affordable medicines only. 
Assist anna by creating a report of all the medicines which are pricey and affordable, listing the companyName, productName, 
description, maxPrice, and the price category of each. Sort the list in descending order of the maxPrice.
Note: A medicine is considered to be “pricey” if the max price exceeds 1000 and “affordable” if the price is under 5. Write a 
query to find.

*/ 

select *, 
case when maxPrice > 1000 then 'pricey' 
when maxPrice <5 then 'affordable' end as category
  from
		(
		select 
		companyName, productName, description, maxPrice
		from 
		[dbo].[Medicine]

		where maxPrice > 1000 or maxPrice <5
) s

