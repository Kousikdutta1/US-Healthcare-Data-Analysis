
/*
Problem Statement 4.1: 

“HealthDirect” pharmacy finds it difficult to deal with the product type of medicine being displayed in numerical form, 
they want the product type in words. Also, they want to filter the medicines based on tax criteria. 
Display only the medicines of product categories 1, 2, and 3 for medicines that come under tax category I 
and medicines of product categories 4, 5, and 6 for medicines that come under tax category II.
Write a SQL query to solve this problem.
ProductType numerical form and ProductType in words are given by
1 - Generic, 
2 - Patent, 
3 - Reference, 
4 - Similar, 
5 - New, 
6 - Specific,
7 - Biological, 
8 – Dinamized
*/

select pharmacyName, taxCriteria, 
case when productType = 1 then 'Generic'
when productType = 2 then 'Patent'
when productType = 3 then 'Reference'
when productType = 4 then 'Similar'
when productType = 5 then 'New'
when productType = 6 then 'Specific'
end as productTypeNew
from
(
select * from
(
select m.medicineID,pharmacyName, m.productType, m.taxCriteria
from
dbo.Medicine m
join
[dbo].[Keep] k
on m.medicineID = k.medicineID 
join
[dbo].[Pharmacy] p
on p.pharmacyID = k.pharmacyID
where pharmacyName = 'HealthDirect' 
) s
where (productType in (1,2,3) and taxCriteria = 'I') or (productType in (4,5,6) and taxCriteria = 'II')
) as p

/*

Problem Statement 4.2:

'Ally Scripts' pharmacy company wants to find out the quantity of medicine prescribed in each of its prescriptions.
Write a query that finds the sum of the quantity of all the medicines in a prescription and if the total quantity of medicine 
is less than 20 tag it as “low quantity”. If the quantity of medicine is from 20 to 49 (both numbers including) tag it as
“medium quantity“ and if the quantity is more than equal to 50 then tag it as “high quantity”.
Show the prescription Id, the Total Quantity of all the medicines in that prescription, and the Quantity tag for all the 
prescriptions issued by 'Ally Scripts'.
3 rows from the resultant table may be as follows:
prescriptionID	totalQuantity	Tag
1147561399		43			Medium Quantity
1222719376		71			High Quantity
1408276190		48			Medium Quantity

*/

with cte as
(
select pr.prescriptionID, sum(quantity) as total_quantity
from 
[dbo].[Pharmacy] p
join
[dbo].[Prescription] pr
on p.pharmacyID = pr.pharmacyID
join
[dbo].[Contain] c
on pr.prescriptionID = c.prescriptionID
where pharmacyName = 'Ally Scripts'
group by pr.prescriptionID
)
  select *, 
  case when total_quantity < 20 then 'low quantity'
  when total_quantity >=20 and total_quantity <=49 then 'medium quantity'
  when total_quantity>=50 then 'high quantity'
  end as tag
  from cte
  order by prescriptionID



/*

Problem Statement 4.3: 
In the Inventory of a pharmacy 'Spot Rx' the quantity of medicine is considered ‘HIGH QUANTITY’ when the quantity exceeds 7500 
and ‘LOW QUANTITY’ when the quantity falls short of 1000. The discount is considered “HIGH” if the discount rate on a product 
is 30% or higher, and the discount is considered “NONE” when the discount rate on a product is 0%.
 'Spot Rx' needs to find all the Low quantity products with high discounts and all the high-quantity products with no discount 
 so they can adjust the discount rate according to the demand. 
Write a query for the pharmacy listing all the necessary details relevant to the given requirement.

Hint: Inventory is reflected in the Keep table.

*/


with cte as
(
select p.pharmacyID,medicineID, pharmacyName, quantity, discount
from
[dbo].[Pharmacy] p
join
[dbo].[Keep] k
on p.pharmacyID = k.pharmacyID
where pharmacyName = 'Spot Rx'
),
			cte2 as
			(
			select *, 
			case when quantity > 7500 then 'HIGH QUANTITY' 
			when quantity < 1000 then 'LOW QUANTITY'
			end as  quant_high_low,

			case when discount >= 30 then 'High'
			when discount =0 then 'NONE'
			end as discount_high_low
			from 
			cte
			)

					select medicineID, quant_high_low, discount_high_low
					from cte2
					where 
					(quant_high_low = 'HIGH QUANTITY' and discount_high_low = 'NONE')
					or (quant_high_low = 'LOW QUANTITY' and discount_high_low = 'High')

/*
Problem Statement 4.4: 

Mack, From HealthDirect Pharmacy, wants to get a list of all the affordable and costly, hospital-exclusive medicines 
in the database. Where affordable medicines are the medicines that have a maximum price of less than 50% of the avg 
maximum price of all the medicines in the database, and costly medicines are the medicines that have a maximum price 
of more than double the avg maximum price of all the medicines in the database.  Mack wants clear text next to each 
medicine name to be displayed that identifies the medicine as affordable or costly. The medicines that do not fall 
under either of the two categories need not be displayed.
Write a SQL query for Mack for this requirement.

*/

select pharmacyName, medicineID, hospitalExclusive, cost_affordable
from 
(
select p.pharmacyName,m.medicineID, maxPrice, hospitalExclusive ,

case when maxPrice < (select avg(maxPrice)/2  from [dbo].[Medicine]) then 'affordable medicine'
when maxPrice >(select 2*avg(maxPrice)  from [dbo].[Medicine])then 'costly'
end as cost_affordable from

[dbo].[Medicine] m
join
[dbo].[Keep] k
on m.medicineID = k.medicineID
join
[dbo].[Pharmacy] p
on k.pharmacyID = p.pharmacyID
where p.pharmacyName = 'HealthDirect'
) s
where hospitalExclusive = 'S' and cost_affordable is not null


/*

Problem Statement 4.5: 

The healthcare department wants to categorize the patients into the following category.
YoungMale: Born on or after 1st Jan  2005  and gender male.
YoungFemale: Born on or after 1st Jan  2005  and gender female.
AdultMale: Born before 1st Jan 2005 but on or after 1st Jan 1985 and gender male.
AdultFemale: Born before 1st Jan 2005 but on or after 1st Jan 1985 and gender female.
MidAgeMale: Born before 1st Jan 1985 but on or after 1st Jan 1970 and gender male.
MidAgeFemale: Born before 1st Jan 1985 but on or after 1st Jan 1970 and gender female.
ElderMale: Born before 1st Jan 1970, and gender male.
ElderFemale: Born before 1st Jan 1970, and gender female.

Write a SQL query to list all the patient name, gender, dob, and their category.

*/

with cte as

(select pr.personName,pr.gender,p.dob,case
when dob>'2005-01-01' and gender='male' then 'YoungMale'
when dob>'2005-01-01' and gender='female' then 'YoungFemale'
when (dob between '1985-01-01' and '2005-01-01') and gender='male' then 'AdultMale'
when (dob between '1985-01-01' and '2005-01-01') and gender='female' then 'AdultFemale'
when (dob between '1970-01-01' and '1985-01-01') and gender='male' then 'MidAgeMale'
when (dob between '1970-01-01' and '1985-01-01') and gender='female' then 'MidAgeFemale'
when dob<'1970-01-01' and gender='male' then 'ElderMale'
when dob<'1970-01-01' and gender='female' then 'ElderFemale'
end as category
from [dbo].[Patient] p 
join [dbo].[Person] as pr on p.patientID = pr.personID)

select * from cte
where category is not null
